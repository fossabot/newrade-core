{"version":3,"sources":["../../src/commands/gatsby.ts"],"sourcesContent":["import { spawn } from 'child_process';\n\nimport { Command, Flags } from '@oclif/core';\n\nimport { getShellForPlatform } from '@newrade/core-node-utils';\n\nimport { debugInstance, enableDebug, NS } from '../utilities/log.utilities.js';\n\nexport default class Gatsby extends Command {\n  log = debugInstance(`${NS}:gatsby`);\n  logWarn = debugInstance(`${NS}:gatsby:warn`);\n  logError = debugInstance(`${NS}:gatsby:error`);\n\n  static description = 'Shortcut to run Gatsby with typescript (ts-node)';\n\n  static examples = [`$ nr gatsby build`];\n\n  static args = [{ name: 'command' }];\n\n  static flags = {\n    'no-uglify': Flags.boolean({ description: 'gatsby --no-uglify flag' }),\n    verbose: Flags.boolean({ description: 'gatsby verbose command' }),\n    inspect: Flags.boolean({ description: 'gatsby inspect command' }),\n    port: Flags.string({ char: 'p', description: 'gatsby port option' }),\n    host: Flags.string({ char: 'H', description: 'gatsby host option' }),\n  };\n\n  async run() {\n    enableDebug();\n\n    const { args, flags } = await this.parse(Gatsby);\n\n    const command = [\n      `cross-env TS_NODE_PROJECT=../../tsconfig.node-cli.json node -r ts-node/register ../../node_modules/gatsby/dist/bin/gatsby.js`,\n      `${args.command || ''}`,\n      `${flags['no-uglify'] ? '--no-uglify' : ''}`,\n      `${flags.verbose ? '--verbose' : ''}`,\n      `${flags.inspect ? '--inspect' : ''}`,\n      `${flags.port ? `-p ${flags.port}` : ''}`,\n      `${flags.host ? `-H ${flags.host}` : ''}`,\n    ].join(' ');\n\n    this.log(`running: ${command}`);\n\n    this.log(`NODE_ENV is: ${process.env.NODE_ENV}`);\n\n    const cmd = spawn(command, {\n      shell: getShellForPlatform(),\n      stdio: ['inherit', 'pipe', 'pipe'],\n      env: process.env,\n    });\n\n    let errors: any[] = [];\n\n    const handleData = (chunk: Buffer) => {\n      //\n      // gatsby cli does not use stderr correctly, so we have to parse stdout and find occurence of errors\n      //\n      const chunkString = chunk.toString();\n      if (/error\\s/gi.test(chunkString)) {\n        process.stderr.write(chunk);\n\n        if (\n          !/(\\.gitkeep|DeprecationWarning|webpack\\.cache\\.PackFileCacheStrategy)/gi.test(\n            chunkString\n          )\n        ) {\n          errors.push(chunkString);\n        }\n\n        return;\n      }\n      process.stdout.write(chunk);\n    };\n\n    const handleError = (error: Error) => {\n      errors.push(error.toString());\n      process.stderr.write(error.toString());\n    };\n\n    const handleClose = (args: any[]) => {\n      if (errors.length) {\n        this.logError(`finished with ${errors.length} errors`);\n        errors.forEach((error, errorIndex) => {\n          this.logError(`error #${errorIndex}:`);\n          process.stderr.write(`\\t${error.toString()}`);\n        });\n\n        process.exit(1);\n      }\n      this.log(`finished`);\n      process.exit(0);\n    };\n\n    cmd.stdout.on('data', handleData);\n    cmd.stderr.on('data', handleData);\n\n    cmd.stdout.on('error', handleError);\n    cmd.stderr.on('error', handleError);\n\n    cmd.stdout.on('close', handleClose);\n    cmd.stderr.on('close', handleClose);\n  }\n}\n"],"names":["Gatsby","Command","log","debugInstance","NS","logWarn","logError","description","examples","args","name","flags","Flags","boolean","verbose","inspect","port","string","char","host","run","enableDebug","parse","command","join","process","env","NODE_ENV","cmd","spawn","shell","getShellForPlatform","stdio","errors","handleData","chunk","chunkString","toString","test","stderr","write","push","stdout","handleError","error","handleClose","length","forEach","errorIndex","exit","on"],"mappings":"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"}