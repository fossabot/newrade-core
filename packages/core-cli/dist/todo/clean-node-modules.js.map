{"version":3,"sources":["../../src/todo/clean-node-modules.ts"],"sourcesContent":["import { Command, Flags } from '@oclif/core';\nimport debug from 'debug';\nimport { spawnSync } from 'node:child_process';\n\nimport { getShellForPlatform } from '@newrade/core-node-utils';\n\nexport default class CleanNodeModules extends Command {\n  ddebug: debug.Debugger = debug('nr:core-cli:clean-node-modules');\n  ddebugWarn: debug.Debugger = debug('nr:core-cli:clean-node-modules:warn');\n  ddebugError: debug.Debugger = debug('nr:core-cli:clean-node-modules:error');\n\n  static description = `find . -name 'node_modules' -type d -prune -print -exec rimraf -rf '{}' \\;`;\n\n  // nvm cache clear\n  // yarn cache clear\n  // npm cache clear --force\n  static examples = [`$ nr resetbranches`];\n\n  static flags = {\n    help: Flags.help({ char: 'h' }),\n  };\n\n  static args = [{ name: 'dir' }];\n\n  async init() {\n    debug.enable('nr:core-cli:*');\n  }\n\n  async run() {\n    spawnSync(`brew upgrade`, {\n      cwd: '.',\n      shell: getShellForPlatform(),\n      stdio: 'inherit',\n      env: process.env,\n    });\n\n    spawnSync(`npm cache clean â€“force`, {\n      cwd: '.',\n      shell: getShellForPlatform(),\n      stdio: 'inherit',\n      env: process.env,\n    });\n\n    spawnSync(`yarn cache clean`, {\n      cwd: '.',\n      shell: getShellForPlatform(),\n      stdio: 'inherit',\n      env: process.env,\n    });\n  }\n}\n"],"names":["CleanNodeModules","Command","ddebug","debug","ddebugWarn","ddebugError","description","examples","flags","help","Flags","char","args","name","init","enable","run","spawnSync","cwd","shell","getShellForPlatform","stdio","env","process"],"mappings":"AAAA;;;;;AAA+B,IAAA,KAAa,WAAb,aAAa,CAAA;AAC1B,IAAA,MAAO,kCAAP,OAAO,EAAA;AACC,IAAA,iBAAoB,WAApB,oBAAoB,CAAA;AAEV,IAAA,cAA0B,WAA1B,0BAA0B,CAAA;AAE/C,MAAMA,gBAAgB,SAASC,KAAO,QAAA;IACnDC,MAAM,GAAmBC,CAAAA,GAAAA,MAAK,AAAkC,CAAA,QAAlC,CAAC,gCAAgC,CAAC,CAAC;IACjEC,UAAU,GAAmBD,CAAAA,GAAAA,MAAK,AAAuC,CAAA,QAAvC,CAAC,qCAAqC,CAAC,CAAC;IAC1EE,WAAW,GAAmBF,CAAAA,GAAAA,MAAK,AAAwC,CAAA,QAAxC,CAAC,sCAAsC,CAAC,CAAC;IAE5E,OAAOG,WAAW,GAAG,CAAC,0EAA0E,CAAC,CAAC;IAElG,kBAAkB;IAClB,mBAAmB;IACnB,0BAA0B;IAC1B,OAAOC,QAAQ,GAAG;QAAC,CAAC,kBAAkB,CAAC;KAAC,CAAC;IAEzC,OAAOC,KAAK,GAAG;QACbC,IAAI,EAAEC,KAAK,MAAA,CAACD,IAAI,CAAC;YAAEE,IAAI,EAAE,GAAG;SAAE,CAAC;KAChC,CAAC;IAEF,OAAOC,IAAI,GAAG;QAAC;YAAEC,IAAI,EAAE,KAAK;SAAE;KAAC,CAAC;IAEhC,MAAMC,IAAI,GAAG;QACXX,MAAK,QAAA,CAACY,MAAM,CAAC,eAAe,CAAC,CAAC;KAC/B;IAED,MAAMC,GAAG,GAAG;QACVC,CAAAA,GAAAA,iBAAS,AAKP,CAAA,UALO,CAAC,CAAC,YAAY,CAAC,EAAE;YACxBC,GAAG,EAAE,GAAG;YACRC,KAAK,EAAEC,CAAAA,GAAAA,cAAmB,AAAE,CAAA,oBAAF,EAAE;YAC5BC,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAEC,OAAO,CAACD,GAAG;SACjB,CAAC,CAAC;QAEHL,CAAAA,GAAAA,iBAAS,AAKP,CAAA,UALO,CAAC,CAAC,wBAAsB,CAAC,EAAE;YAClCC,GAAG,EAAE,GAAG;YACRC,KAAK,EAAEC,CAAAA,GAAAA,cAAmB,AAAE,CAAA,oBAAF,EAAE;YAC5BC,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAEC,OAAO,CAACD,GAAG;SACjB,CAAC,CAAC;QAEHL,CAAAA,GAAAA,iBAAS,AAKP,CAAA,UALO,CAAC,CAAC,gBAAgB,CAAC,EAAE;YAC5BC,GAAG,EAAE,GAAG;YACRC,KAAK,EAAEC,CAAAA,GAAAA,cAAmB,AAAE,CAAA,oBAAF,EAAE;YAC5BC,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAEC,OAAO,CAACD,GAAG;SACjB,CAAC,CAAC;KACJ;CACF;kBA5CoBtB,gBAAgB"}